void main (	float3 objectSpacePos: TEXCOORD4,
			float3 normal: TEXCOORD3,			
			float3 lightVec: TEXCOORD1,
			float2 texCoord: TEXCOORD0,
			float3 eyeVec: TEXCOORD2,	
			float3 lightPosition: TEXCOORD5,			

			uniform sampler2D colorMap: TEXUNIT0,
			uniform sampler2D normalMap: TEXUNIT1,			
			uniform float3 Ia,
            uniform float3 Id,
            uniform float bumpP,                       
            
            out float3 color : COLOR)
{	

	float distSqr = dot(lightVec, lightVec);
	//float att = clamp(1.0 - invRadius * sqrt(distSqr), 0.0, 1.0);
	//float att = clamp(sqrt(distSqr), 0.0, 1.0);
	float3 lVec = lightVec * inversesqrt(distSqr);

	float3 vVec = normalize(eyeVec);
	
	float3 base = tex2D(colorMap, texCoord).xyz;
	
	float3 bump = normalize( tex2D(normalMap, texCoord).xyz * 2.0 - 1.0);

	float3 vAmbient = Ia ;

	float diffuse = max( dot(lVec, bump), 0.0 );
	
	float3 vDiffuse = Id * diffuse;	

	//float specular = pow(clamp(dot(reflect(-lVec, bump), vVec), 0.0, 1.0), shininess );
	
	//float3 vSpecular = Is * Ks * specular;	
	
	//color = ( vAmbient*base + vDiffuse*base + vSpecular) * att;
	if (bumpP == 0)
		color = base;
	else
		color = ( vAmbient*base + vDiffuse*base) ;// * att;				
}